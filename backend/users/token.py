from rest_framework_simplejwt.serializers import TokenObtainPairSerializer
from django.contrib.auth import authenticate
from rest_framework import serializers
from .serializers import UserSerializer  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

class CustomTokenObtainPairSerializer(TokenObtainPairSerializer):
    username_field = 'email'  # üîë –ì–æ–≤–æ—Ä–∏–º, —á—Ç–æ –ª–æ–≥–∏–Ω ‚Äî —ç—Ç–æ email

    def validate(self, attrs):
        email = attrs.get('email')
        password = attrs.get('password')

        # üß† –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = authenticate(
            request=self.context.get('request'),
            email=email,
            password=password
        )

        if not user:
            raise serializers.ValidationError('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å')

        # ‚úÖ –ü–æ–ª—É—á–∞–µ–º access + refresh
        data = super().validate(attrs)

        # üî• –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ç–≤–µ—Ç
        data['user'] = UserSerializer(user, context=self.context).data

        return data
