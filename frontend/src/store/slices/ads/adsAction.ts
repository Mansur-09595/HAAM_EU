import { createAsyncThunk } from '@reduxjs/toolkit'
import { Ads } from '@/types/IAds' // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è

const API_BASE = 'http://localhost:8000/api'


// üîÅ –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
export const fetchAds = createAsyncThunk<
  { results: Ads[]; count: number; next: string | null; previous: string | null },
  {
    page?: number
    category?: string
    city?: string
    searchTerm?: string
    minPrice?: number
    maxPrice?: number
    append?: boolean
  },
  { rejectValue: string }
>(
  'ads/fetchAds',
  async (
    {
      page = 1,
      category,
      city,
      searchTerm,
      minPrice,
      maxPrice,
    },
    { rejectWithValue }
  ) => {
    const params = new URLSearchParams()
    params.set('page', String(page))
    params.set('page_size', String(8))
    if (category) params.set('category_slug', category)
    if (city) params.set('location', city)
    if (searchTerm) params.set('searchTerm', searchTerm)
    if (minPrice !== undefined) params.set('minPrice', String(minPrice))
    if (maxPrice !== undefined) params.set('maxPrice', String(maxPrice))

    const res = await fetch(`${API_BASE}/listings/?${params.toString()}`)
     // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ OK, —á–∏—Ç–∞–µ–º —Ç–µ–∫—Å—Ç (HTML –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ)
     if (!res.ok) {
      const text = await res.text()
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ fetchAds:', text)
      return rejectWithValue(
        `–û—à–∏–±–∫–∞ ${res.status} ${res.statusText}`
      )
    }

    // –ï—Å–ª–∏ OK, –ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
    let data: { results: Ads[]; count: number; next: string | null; previous: string | null }
    try {
      data = await res.json()
    } catch (err) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON:', err)
      return rejectWithValue('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞')
    }

    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤ –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
    if (
      !data ||
      !Array.isArray(data.results) ||
      typeof data.count !== 'number'
    ) {
      console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:', data)
      return rejectWithValue('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞')
    }

    return data as {
      results: Ads[]
      count: number
      next: string | null
      previous: string | null
    }
  }
)

// ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
export const addAd = createAsyncThunk<
  Ads,          // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  FormData,     // –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî FormData
  { rejectValue: string }
>(
  'ads/addAd',
  async (newAd, { rejectWithValue }) => {
    const token = localStorage.getItem('accessToken')
    if (!token) {
      // –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –≤–æ–æ–±—â–µ
      return rejectWithValue('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')
    }

    const res = await fetch(`${API_BASE}/listings/`, {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${token}`,
      },
      body: newAd,
    })

    const data = await res.json()
    if (!res.ok) {
      // 401/403 ‚Üí –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
      if (res.status === 401 || res.status === 403) {
        return rejectWithValue('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')
      }
      // –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ API
      return rejectWithValue(data.detail || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
    }

    return data as Ads
  }
)

// üîç –ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ ID
export const fetchAdBySlug = createAsyncThunk("ads/fetchBySlug", async (slug: string) => {
    const res = await fetch(`${API_BASE}/listings/${slug}/`)
    if (res.status === 404) {
      // –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å null –∏ –æ—Ç–ª–æ–≤–∏—Ç—å —ç—Ç–æ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ
      return null
    }
    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")
    return (await res.json()) as Ads
  }
)

// ‚≠ê VIP-—Å—Ç–∞—Ç—É—Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è (–∏–∑–º–µ–Ω–µ–Ω–∏–µ is_featured)
export const toggleFeatured = createAsyncThunk<
  Ads,
  { slug: string; is_featured: boolean },
  { rejectValue: string }
>(
  'ads/toggleFeatured',
  async ({ slug, is_featured }, { rejectWithValue }) => {
    const token = localStorage.getItem('accessToken')
    if (!token) {
      return rejectWithValue('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å VIP-—Å—Ç–∞—Ç—É—Å')
    }

    const res = await fetch(`${API_BASE}/listings/${slug}/`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({ is_featured }),
    })

    const data = await res.json()
    if (!res.ok) {
      return rejectWithValue(data.detail ?? '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å VIP-—Å—Ç–∞—Ç—É—Å')
    }
    return data as Ads
  }
)



// ‚ñ∫‚ñ∫‚ñ∫ –ù–æ–≤—ã–π Thunk: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
// –¢–∏–ø –≤–æ–∑–≤—Ä–∞—Ç–∞: –º—ã –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—ë—Ç —Ç–æ—Ç –∂–µ JSON, —á—Ç–æ –∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏:
// { id, image, is_primary, created_at }
export const updateListingImage = createAsyncThunk<
  {
    id: number;
    image: string;
    is_primary: boolean;
    created_at: string;
  },
  {
    id: number;               // id —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ ListingImage
    imageFile?: File;         // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª
    is_primary?: boolean;     // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–º–µ–Ω—è—Ç—å —Ñ–ª–∞–≥ primary
  },
  { rejectValue: string }
>(
  "ads/updateListingImage",
  async ({ id, imageFile, is_primary }, { rejectWithValue }) => {
    const token = localStorage.getItem("accessToken");
    if (!token) {
      return rejectWithValue("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ");
    }

    // –°–æ–±–∏—Ä–∞–µ–º FormData: –±—É–¥–µ–º –≤–∫–ª—é—á–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ –ø–æ–ª—è, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω—ã
    const formData = new FormData();
    if (imageFile) {
      formData.append("image", imageFile);
    }
    if (typeof is_primary === "boolean") {
      formData.append("is_primary", is_primary ? "true" : "false");
    }

    const res = await fetch(`${API_BASE}/listings/images/${id}/`, {
      method: "PATCH", // –∏–ª–∏ "PUT", –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é –∑–∞–º–µ–Ω—É
      headers: {
        Authorization: `Bearer ${token}`,
        // Content-Type –Ω–µ —Å—Ç–∞–≤–∏–º ‚Äî –±—Ä–∞—É–∑–µ—Ä –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç multipart/form-data boundary
      },
      body: formData,
    });

    let data: unknown;
    try {
      data = await res.json();
    } catch (err) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –ø—Ä–∏ updateListingImage:", err);
      return rejectWithValue("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
    }

    if (!res.ok) {
      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 400/403)
      const errObj = data as { detail?: string };
      return rejectWithValue(errObj.detail || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ");
    }

    return data as {
      id: number;
      image: string;
      is_primary: boolean;
      created_at: string;
    };
  }
);